{"repository_name":"nanoid","body":"# nanoid.cr\n\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/3108082114df406abb95c38bf751c2f0)](https://app.codacy.com/app/mamantoha/nanoid.cr?utm_source=github.com&utm_medium=referral&utm_content=mamantoha/nanoid.cr&utm_campaign=Badge_Grade_Settings)\n[![Crystal CI](https://github.com/mamantoha/nanoid.cr/actions/workflows/crystal.yml/badge.svg)](https://github.com/mamantoha/nanoid.cr/actions/workflows/crystal.yml)\n[![GitHub release](https://img.shields.io/github/release/mamantoha/nanoid.cr.svg)](https://github.com/mamantoha/nanoid.cr/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://mamantoha.github.io/nanoid.cr/)\n[![License](https://img.shields.io/github/license/mamantoha/nanoid.cr.svg)](https://github.com/mamantoha/nanoid.cr/blob/master/LICENSE)\n\nCrystal implementation of original [NanoID](https://github.com/ai/nanoid)\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  nanoid:\n    github: mamantoha/nanoid.cr\n```\n\n## Usage\n\n```crystal\nrequire \"nanoid\"\n```\n\n`Nanoid.generate` uses URL-friendly symbols (`A-Za-z0-9_-`) and returns an ID with 21 characters.\n\n```crystal\nNanoid.generate\n# => 3gFI8yZxcfXsXGhB0036l\n```\n\nIf you want to reduce ID length (and increase collisions probability), you can pass the length as an argument.\n\n```crystal\nNanoid.generate(size: 8, alphabet: \"1234567890abcdef\")\n# => 86984b57\n```\n\nNon-secure API is also available.\n\n```crystal\nNanoid.generate(secure: false)\n# => no0MmiInNcBm9jR2_3sGt\n\nNanoid.generate(size: 10, alphabet: \"1234567890abcdef\", secure: false)\n# => 2793b2351c\n```\n\n## Benchmark\n\n`crystal run --release ./bench/benchmark.cr`\n\n```console\nCrystal 1.16.2 (2025-04-29)\n\nLLVM: 20.1.4\nDefault target: aarch64-apple-darwin24.5.0\n\n    Nanoid.simple_generate(21)   3.94  (253.59ms) (± 0.63%)  76.3MB/op   3.51× slower\n   Nanoid.complex_generate(21)   3.42  (292.32ms) (± 1.27%)  91.6MB/op   4.05× slower\nNanoid.non_secure_generate(21)  13.85  ( 72.22ms) (± 1.32%)  45.8MB/op        fastest\n                       UUID v4   3.87  (258.36ms) (± 0.79%)   168MB/op   3.58× slower\n    Nanoid.simple_generate(36)   3.55  (281.52ms) (± 0.58%)   107MB/op   2.28× slower\n   Nanoid.complex_generate(36)   3.06  (327.20ms) (± 0.74%)   122MB/op   2.65× slower\nNanoid.non_secure_generate(36)   8.11  (123.26ms) (± 2.13%)  61.0MB/op        fastest\n                       UUID v4   3.84  (260.71ms) (± 3.38%)   168MB/op   2.12× slower\n```\n\n## Development\n\nClone this repository and install dependencies:\n\n```console\nshards install\n```\n\nRun tests:\n\n```console\ncrystal spec\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/mamantoha/nanoid.cr/fork>)\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [mamantoha](https://github.com/mamantoha) Anton Maminov - creator, maintainer\n\n## License\n\nCopyright: 2018-2025 Anton Maminov (anton.maminov@gmail.com)\n\nThis library is distributed under the MIT license. Please see the LICENSE file.\n","program":{"html_id":"nanoid/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"nanoid","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"nanoid/Nanoid","path":"Nanoid.html","kind":"module","full_name":"Nanoid","name":"Nanoid","abstract":false,"locations":[{"filename":"src/nanoid.cr","line_number":1,"url":"https://github.com/mamantoha/nanoid.cr/blob/9957d8c5f63bd9ba61ab4dbf82fdaa24165cc775/src/nanoid.cr#L1"}],"repository_name":"nanoid","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"URL_ALPHABET","name":"URL_ALPHABET","value":"\"_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\""},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /home/runner/work/nanoid.cr/nanoid.cr/src`).chomp.stringify }}"}],"class_methods":[{"html_id":"complex_generate(size:Int32,alphabet:String):String-class-method","name":"complex_generate","doc":"Generate secure URL-friendly unique ID","summary":"<p>Generate secure URL-friendly unique ID</p>","abstract":false,"args":[{"name":"size","external_name":"size","restriction":"Int32"},{"name":"alphabet","external_name":"alphabet","restriction":"String"}],"args_string":"(size : Int32, alphabet : String) : String","args_html":"(size : Int32, alphabet : String) : String","location":{"filename":"src/nanoid.cr","line_number":45,"url":"https://github.com/mamantoha/nanoid.cr/blob/9957d8c5f63bd9ba61ab4dbf82fdaa24165cc775/src/nanoid.cr#L45"},"def":{"name":"complex_generate","args":[{"name":"size","external_name":"size","restriction":"Int32"},{"name":"alphabet","external_name":"alphabet","restriction":"String"}],"return_type":"String","visibility":"Public","body":"alphabet_size = alphabet.size\n\n\n\n\n\nmask = (2 << (Math.log2(alphabet_size - 1)).to_i) - 1\n\n\n\n\n\n\n\n\nstep = (((1.6 * mask) * size) / alphabet_size).ceil.to_i\n\ntotal = 0\n\nString.new(size) do |buffer|\n  while total < size\n    bytes = random_bytes(step)\n\n    step.times do |i|\n      char = alphabet[bytes[i] & mask]?\n\n      if char\n      else\n        next\n      end\n\n      buffer[total] = char.ord.to_u8\n\n      if (total = total + 1) == size\n        break\n      end\n    end\n  end\n\n  {size, size}\nend\n"},"external_var":false},{"html_id":"generate(size=21,alphabet=URL_ALPHABET,secure=true):String-class-method","name":"generate","abstract":false,"args":[{"name":"size","default_value":"21","external_name":"size","restriction":""},{"name":"alphabet","default_value":"URL_ALPHABET","external_name":"alphabet","restriction":""},{"name":"secure","default_value":"true","external_name":"secure","restriction":""}],"args_string":"(size = 21, alphabet = URL_ALPHABET, secure = true) : String","args_html":"(size = <span class=\"n\">21</span>, alphabet = <span class=\"t\">URL_ALPHABET</span>, secure = <span class=\"n\">true</span>) : String","location":{"filename":"src/nanoid.cr","line_number":6,"url":"https://github.com/mamantoha/nanoid.cr/blob/9957d8c5f63bd9ba61ab4dbf82fdaa24165cc775/src/nanoid.cr#L6"},"def":{"name":"generate","args":[{"name":"size","default_value":"21","external_name":"size","restriction":""},{"name":"alphabet","default_value":"URL_ALPHABET","external_name":"alphabet","restriction":""},{"name":"secure","default_value":"true","external_name":"secure","restriction":""}],"return_type":"String","visibility":"Public","body":"if secure\nelse\n  return non_secure_generate(size, alphabet)\nend\n\nif alphabet == URL_ALPHABET\n  return simple_generate(size)\nend\n\ncomplex_generate(size: size, alphabet: alphabet)\n"},"external_var":false},{"html_id":"non_secure_generate(size:Int32,alphabet:String):String-class-method","name":"non_secure_generate","doc":"Non-secure predictable random generator","summary":"<p>Non-secure predictable random generator</p>","abstract":false,"args":[{"name":"size","external_name":"size","restriction":"Int32"},{"name":"alphabet","external_name":"alphabet","restriction":"String"}],"args_string":"(size : Int32, alphabet : String) : String","args_html":"(size : Int32, alphabet : String) : String","location":{"filename":"src/nanoid.cr","line_number":32,"url":"https://github.com/mamantoha/nanoid.cr/blob/9957d8c5f63bd9ba61ab4dbf82fdaa24165cc775/src/nanoid.cr#L32"},"def":{"name":"non_secure_generate","args":[{"name":"size","external_name":"size","restriction":"Int32"},{"name":"alphabet","external_name":"alphabet","restriction":"String"}],"return_type":"String","visibility":"Public","body":"String.new(size) do |buffer|\n  alphabet_size = alphabet.size\n\n  size.times do |i|\n    buffer[i] = alphabet[Random.rand(alphabet_size)].ord.to_u8\n  end\n\n  {size, size}\nend"},"external_var":false},{"html_id":"simple_generate(size:Int32):String-class-method","name":"simple_generate","abstract":false,"args":[{"name":"size","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32) : String","args_html":"(size : Int32) : String","location":{"filename":"src/nanoid.cr","line_number":14,"url":"https://github.com/mamantoha/nanoid.cr/blob/9957d8c5f63bd9ba61ab4dbf82fdaa24165cc775/src/nanoid.cr#L14"},"def":{"name":"simple_generate","args":[{"name":"size","external_name":"size","restriction":"Int32"}],"return_type":"String","visibility":"Public","body":"bytes = random_bytes(size)\n\nString.new(size) do |buffer|\n  size.times do |i|\n\n\n\n\n\n    buffer[i] = URL_ALPHABET[bytes[i] & 63].ord.to_u8\n  end\n\n  {size, size}\nend\n"},"external_var":false}]}]}}